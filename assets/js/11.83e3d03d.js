(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{608:function(a,t,s){"use strict";s.r(t);var n=s(52),r=Object(n.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"java语言基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#java语言基础"}},[a._v("#")]),a._v(" java语言基础")]),a._v(" "),s("h2",{attrs:{id:"命名规则"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#命名规则"}},[a._v("#")]),a._v(" 命名规则")]),a._v(" "),s("ul",[s("li",[a._v("java命名是严格区分大小写的，变量名由字母,美元符'$',下划线‘__’开头，但通常推荐使用字母开头。")]),a._v(" "),s("li",[a._v("在为变量或者字段命名时尽可能的"),s("font",{attrs:{color:"red"}},[a._v("见名知意")]),a._v(",即使用单词组合进行变量命名")],1),a._v(" "),s("li",[a._v("如果变量名是一个单词则全部字母小写，如果由两个及以上组成则从第二个单词开始每个单词的首字母大写，例如：myName这种命名方式也称为‘驼峰命名’。")]),a._v(" "),s("li",[a._v("如果变量名是常量，则全部字母大写单词与单词之间以下划线分割。")]),a._v(" "),s("li",[a._v("命名不可以使用java关键字和保留字。")])]),a._v(" "),s("h2",{attrs:{id:"基本数据类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[a._v("#")]),a._v(" 基本数据类型")]),a._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("byte：byte数据类型是一个 8 位有符号二进制补码整数。它的最小值为 -128，最大值为 127（含）。默认值是 0。\n\nshort：short数据类型是 16 位有符号二进制补码整数。它的最小值为 -32,768，最大值为 32,767（含）。默认值是 0。\n\nint：默认情况下，int数据类型为 32 位有符号二进制补码整数，最小值为 -2^31，最大值为 2^31-1。默认值是 0。\n\nlong：long数据类型是 64 位二进制补码整数。有符号长整数的最小值为 -2^63，最大值为 2^63 -1。默认值是 0L。\n\nfloat：float数据类型是单精度 32 位浮点数。默认值是 0.0f。\n\ndouble：double数据类型是双精度 64 位浮点数。默认值是 0.0d。\n\nboolean：boolean数据类型只有两个可能的值：true和false。在编译阶段(就是你写代码的时候)，它的“大小”并不是精确定义的。默认值是 false。\n\nchar：char数据类型是单个 16 位 Unicode 字符。它的最小值为'\\u0000'（或 0），最大值为'\\uffff'（或 65,535，包括在内）默认值是 '\\u0000'。\n")])])]),s("h3",{attrs:{id:"字段和变量初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字段和变量初始化"}},[a._v("#")]),a._v(" 字段和变量初始化")]),a._v(" "),s("p",[a._v("在字段时，基本数据类型都被赋予了默认值(上面有介绍)，但是在局部变量时必须显示的给变量赋值否则编译时会报如下错误。")]),a._v(" "),s("p",[s("img",{attrs:{src:"D:%5Cmysoft_install%5CTypora%5Cnotes%5Cagain%5Cjava%5Cimg%5C01.png",alt:""}})]),a._v(" "),s("p",[s("img",{attrs:{src:"D:%5Cmysoft_install%5CTypora%5Cnotes%5Cagain%5Cjava%5Cimg%5C02.png",alt:""}})]),a._v(" "),s("h3",{attrs:{id:"数值数据类型赋值的小技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数值数据类型赋值的小技巧"}},[a._v("#")]),a._v(" 数值数据类型赋值的小技巧")]),a._v(" "),s("p",[a._v("在为数值数据类型(int、float、double、long)赋值时，可以在数字之间添加下划线以便区分数字的大小,不能在数值开头结尾或者小数点前后添加下划线。")]),a._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("\t\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("123_456")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("123_457")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"a的大小是: "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        "),s("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("System")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"结果是: "')]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[s("img",{attrs:{src:"D:%5Cmysoft_install%5CTypora%5Cnotes%5Cagain%5Cjava%5Cimg%5C03.png",alt:""}})]),a._v(" "),s("h2",{attrs:{id:"数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[a._v("#")]),a._v(" 数组")]),a._v(" "),s("p",[a._v("数组的长度在创建是就需要确定且长度不可变，且一种数组只能保存一种数据类型，数组的下标从 0 开始。")]),a._v(" "),s("h3",{attrs:{id:"数组的创建方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的创建方式"}},[a._v("#")]),a._v(" 数组的创建方式")]),a._v(" "),s("ol",[s("li",[a._v("int[] arr = new int[size]")]),a._v(" "),s("li",[a._v("int arr[] = new int[size] 不推荐使用")]),a._v(" "),s("li",[a._v("int[] arr = {1,2,3...}")])]),a._v(" "),s("h3",{attrs:{id:"数组的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组的使用"}},[a._v("#")]),a._v(" 数组的使用")]),a._v(" "),s("p",[a._v("我们经常还会使用二维数组，二维数组的每一项长度可以不同即一维数组的长度可以不同，java.util.Arrays提供了一系列操作数组的api。")]),a._v(" "),s("h2",{attrs:{id:"表达式、语句、块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表达式、语句、块"}},[a._v("#")]),a._v(" 表达式、语句、块")]),a._v(" "),s("p",[a._v("表达式是语句的核心组成部分，语句又可以分组到块中")])])}),[],!1,null,null,null);t.default=r.exports}}]);